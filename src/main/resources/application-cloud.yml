info:
  name: ${project.artifactId}
  version: ${project.version}
  origin: ${scm.url}
  commit: ${buildNumber}
  branch: ${scmBranch}
  built: ${timestamp}

# logging config here as a reminder as to how to override logback from cmd line
# ie -Dlogging.level.org.springframework=DEBUG
logging:
  level:
    org.springframework: WARN
    uk.gov.ons.ctp: DEBUG
  profile: CLOUD
  useJson: true

liquibase:
  user: ${cloud.services.postgresql.connection.username}
  password: ${cloud.services.postgresql.connection.password}
  default-schema: sample
  url: ${cloud.services.postgresql.connection.jdbcurl}
  changeLog: classpath:/database/changelog-master.yml

security:
  basic:
    enabled: true
    realm: sdc
  user:
    name: admin
    password: secret

management:
  security:
    roles: SUPERUSER
    enabled: false

server:
  port: 80
  servlet-path: /

spring:
  application:
    name: ONS SampleService
  http:
    multipart:
      max-file-size: 50MB
      max-request-size: 60MB
      file-size-threshold: 0

  datasource:
    driverClassName: org.postgresql.Driver
    tomcat:
      initial-size: 5
      max-active: 10
      max-idle: 5
      min-idle: 3
    continue-on-error: true
    schema: classpath:/schema-cloud.sql
    user: ${cloud.services.postgresql.connection.username}
    password: ${cloud.services.postgresql.connection.password}
    default-schema: sample
    url: ${cloud.services.postgresql.connection.jdbcurl}

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        ddl-auto: update
        default_schema: sample

party-svc:
  sample-path: /events
  connection-config:
    scheme: http
    host: localhost
    port: 8125
    username: admin
    password: secret    
    retry-attempts: 10
    retry-pause-milli-seconds: 5000
    connect-timeout-milli-seconds: 5000
    read-timeout-milli-seconds: 5000

sftp:
  directory:
    social: SSD/
    business: BSD/
    census: CTP/
    Documents: .
  localdirectory: /tmp/samplesvc
  cron: "0/5 * * * * ?"
  filepattern: "*.xml"

rabbitmq:
  username: ${cloud.services.rabbitmq.connection.username}
  password: ${cloud.services.rabbitmq.connection.password}
  host: ${cloud.services.rabbitmq.connection.host}
  port: ${cloud.services.rabbitmq.connection.port}
  virtualhost: ${cloud.services.rabbitmq.connection.virtualhost}
  cron: "* * * * * ?"

redis:
  host: ${cloud.services.redis.connection.host}
  port: ${cloud.services.redis.connection.port}

data-grid:
  address: ${cloud.services.redis.connection.host}:6379

messaging:
  pubMaxAttempts: 3

sample-unit-distribution:
  retrieval-max: 500
  distribution-max: 10
  retry-sleep-seconds: 30
  delay-milli-seconds: 60000

swagger-settings:
  swagger-ui-active: false
  group-name: sampleeservice-api
  title: Sample Service API
  description: API for ${project.artifactId}
  version: ${project.version}

retries:
  maxAttempts: 3
  backoff: 5000
